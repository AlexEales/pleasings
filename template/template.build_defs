def template_files(name:str, srcs:list=None, substitutions:dict=None, outs:list=None, visibility:list=None, labels:list=None):
    build_labels = [canonicalise(s) for s in substitutions.keys()]
    value_files = [f'{s}_{v}' for s, v in substitutions.items()]
    returned_targets = {}
    check_rule = build_rule(
            name=name,
            tag='check',
            cmd='for SUB in %s; do grep "$SUB" $SRCS || (echo "$SUB is not in files"; exit 1); done' % ' '.join(build_labels),
            srcs=srcs,
            )
    returned_targets['CHECK'] = check_rule

    # construct substitution command
    replacements = [_replacement_escaped(value_file) for value_file in value_files]
    searches = [_search_escaped(target) for target in build_labels]

    replace_in_single_quotes = ' '.join([
        _sed_for_single_quotes(search, replacement) for search, replacement in sorted(zip(searches, replacements))
    ])

    replace_new_line_at_end = ' '.join([
        _sed_for_new_line(search, replacement) for search, replacement in sorted(zip(searches, replacements))
    ])
    subcommands = replace_in_quotes + replace_new_line_at_end
    replacement_command = f'sed {subcommands}'

    rules = []
    # make substitutions
    for src in srcs:
        cleaned_src = src.replace('/', '_').replace(':', '_')
        src_tag = cleaned_src.replace('.', '_')

        src_genrule_name = f'_{name}#{src_tag}'
        rules.append(f':{src_genrule_name}')
        genrule(
            name=src_genrule_name,
            srcs=[src],
            outs=outs,
            cmd=[f"$TOOLS $SRCS | {replacement_command} > $OUT"],
            tools=['cat'],
            deps= value_files + [check_rule],
        )

    files = filegroup(
        name=name,
        srcs=rules,
        visibility=visibility,
        labels=labels,
    )
    returned_targets['FILES'] = files
    return returned_targets

def _replacement_escaped(value_file):
    return f'$(cat $(location {value_file})' + r"| sed -e 's|[|\/&]|\\&|g ')"

def _search_escaped(search):
    return search # haven't found the need to yet but might in the future

def _sed_for_single_quotes(search, replace):
    return f'-e "s|\'{search}\'|{replace}|g"'

def _sed_for_new_line(search, replace):
    return r" | sed -e ':a' -e 'N' -e '$!ba' -e " + f'"s|{search}' + r"\n|" + replace + r"\n" + '|g"'

def template_value(name:str, cmd:str, visibility:list=None, test_only:bool=False):
    val = build_rule(
        name = f'{name}_value',
        cmd = f'echo -n $({cmd}) > $OUT',
        outs = [f'{name}_value'],
        visibility = visibility,
        test_only = test_only,
        )
